// <auto-generated />
using System;
using CarWashEF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarWashEF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarWashEF.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnName("date_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnName("price")
                        .HasColumnType("real");

                    b.Property<int>("Time")
                        .HasColumnName("time")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("CarWashEF.Model.OrderServant", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnName("order_id")
                        .HasColumnType("int");

                    b.Property<int>("ServantId")
                        .HasColumnName("servant_id")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ServantId");

                    b.HasIndex("ServantId");

                    b.ToTable("orders_servants");
                });

            modelBuilder.Entity("CarWashEF.Model.OwnOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnName("price")
                        .HasColumnType("real");

                    b.Property<int?>("ServantId")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnName("time")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServantId");

                    b.ToTable("own_orders");
                });

            modelBuilder.Entity("CarWashEF.Model.OwnOrderServant", b =>
                {
                    b.Property<int>("OwnOrderId")
                        .HasColumnName("own_order_id")
                        .HasColumnType("int");

                    b.Property<int>("ServantId")
                        .HasColumnName("servant_id")
                        .HasColumnType("int");

                    b.HasKey("OwnOrderId", "ServantId");

                    b.HasIndex("ServantId");

                    b.ToTable("own_orders_servants");
                });

            modelBuilder.Entity("CarWashEF.Model.Servant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnName("price")
                        .HasColumnType("real");

                    b.Property<string>("ServantType")
                        .IsRequired()
                        .HasColumnName("servant_type")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Time")
                        .HasColumnName("time")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("servants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Windows washing",
                            Price = 200f,
                            ServantType = "WASH",
                            Time = 15
                        },
                        new
                        {
                            Id = 2,
                            Name = "Windows polishing",
                            Price = 100f,
                            ServantType = "POLISHING",
                            Time = 10
                        },
                        new
                        {
                            Id = 3,
                            Name = "Full washing",
                            Price = 750f,
                            ServantType = "WASH",
                            Time = 60
                        },
                        new
                        {
                            Id = 4,
                            Name = "Full polishing",
                            Price = 500f,
                            ServantType = "POLISHING",
                            Time = 70
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dry cleaning",
                            Price = 2000f,
                            ServantType = "DRY_CLEANERS",
                            Time = 120
                        },
                        new
                        {
                            Id = 6,
                            Name = "NEW",
                            Price = 0f,
                            ServantType = "DRY_CLEANERS",
                            Time = 0
                        });
                });

            modelBuilder.Entity("CarWashEF.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnName("nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Points")
                        .HasColumnName("points")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("CarWashEF.Model.Order", b =>
                {
                    b.HasOne("CarWashEF.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CarWashEF.Model.OrderServant", b =>
                {
                    b.HasOne("CarWashEF.Model.Order", "Order")
                        .WithMany("Servants")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarWashEF.Model.Servant", "Servant")
                        .WithMany("Orders")
                        .HasForeignKey("ServantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarWashEF.Model.OwnOrder", b =>
                {
                    b.HasOne("CarWashEF.Model.Servant", null)
                        .WithMany("OwnOrders")
                        .HasForeignKey("ServantId");
                });

            modelBuilder.Entity("CarWashEF.Model.OwnOrderServant", b =>
                {
                    b.HasOne("CarWashEF.Model.OwnOrder", "OwnOrder")
                        .WithMany("Servants")
                        .HasForeignKey("OwnOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarWashEF.Model.Servant", "Servant")
                        .WithMany()
                        .HasForeignKey("ServantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
